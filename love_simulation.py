import numpy as np
import matplotlib.pyplot as plt

def simulate_love(num_simulations=100000):
    success_count = 0
    results = []

    for _ in range(num_simulations):
        # ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏±‡∏¢‡∏ï‡πà‡∏≤‡∏á ‡πÜ ‡πÉ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å (‡∏™‡∏°‡∏°‡∏∏‡∏ï‡∏¥)
        chance_meeting = np.random.rand() < 0.7  # ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÑ‡∏î‡πâ‡πÄ‡∏à‡∏≠‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÉ‡∏à 70%
        mutual_interest = np.random.rand() < 0.5  # ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ó‡∏µ‡πà‡∏ä‡∏≠‡∏ö‡∏Å‡∏±‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏Ñ‡∏π‡πà 50%
        timing_right = np.random.rand() < 0.6  # ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏∞‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏•‡∏á‡∏ï‡∏±‡∏ß 60%

        # ‡∏ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á 3 ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏£‡∏¥‡∏á = ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
        success = chance_meeting and mutual_interest and timing_right
        results.append(success)
        if success:
            success_count += 1

    prob_love = success_count / num_simulations
    return prob_love, results

# ‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡∏•‡∏≠‡∏á 100,000 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á
num_simulations = 100000
prob_love, results = simulate_love(num_simulations)

# ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
print(f"üíñ ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏û‡∏ö‡∏£‡∏±‡∏Å‡πÅ‡∏ó‡πâ‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡∏•‡∏≠‡∏á Monte Carlo: {prob_love*100:.2f}%")

# ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô int (0 = False, 1 = True)
results = [int(result) for result in results]

# ‡∏™‡∏£‡πâ‡∏≤‡∏á histogram
plt.hist(results, bins=2, edgecolor='black', alpha=0.7)
plt.title("‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏û‡∏ö‡∏£‡∏±‡∏Å‡πÅ‡∏ó‡πâ")
plt.xlabel("‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡∏•‡∏≠‡∏á")
plt.ylabel("‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà")

# ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏£‡∏≤‡∏ü‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå .jpg
plt.savefig("love_simulation_result.jpg", format='jpg')

# ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Å‡∏£‡∏≤‡∏ü‡πÉ‡∏ô‡πÇ‡∏´‡∏°‡∏î interactive
plt.close()
